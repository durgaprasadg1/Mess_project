
<%- layout("/layouts/boilerplate") %>


<div class="container my-5">
  <h2 class="mb-4 text-center fw-bold text-primary">Order History</h2>
  
    <div class="container my-5">


        <% if (currentUser.orders && currentUser.orders.length > 0) { %>
        <form method="post" action="/consumer/<%= currentUser._id %>/history?_method=DELETE" onsubmit="return confirm('Are you sure you want to delete your order history?')">
            <button type="submit" 
            class="btn btn-danger btn-sm fw-semibold shadow-sm px-3 py-2"
            style="border-radius: 25px; transition: all 0.3s;">
            <i class="fa-solid fa-trash me-2"></i> Delete History
            </button>
        </form>
        <% } %>
    </div>
  <% if (orders && orders.length > 0) { %>
  <div class="table-responsive shadow-sm rounded">
    <table class="table table-striped align-middle text-center">
      <thead class="table-dark">
        <tr>
          <th scope="col">Sr. No</th>
          <th scope="col">Mess</th>
          <th scope="col">Total Plates</th>
          <th scope="col">Total Price</th>
          <th scope="col">Placed On</th>
          <th scope="col">Cancel Order</th>
          <th scope="col">Status</th>
          <th scope="col">Get Notified</th>
                    
        </tr>
      </thead>
      <tbody>
        <% orders.forEach((order, index) => { %>
        <tr>
          <th scope="row"><%= index + 1 %></th>
          <td><%= order.mess ? order.mess.name : "N/A" %></td>
          <td><%= order.noOfPlate %></td>
          <td>â‚¹<%= order.totalPrice * order.noOfPlate%></td>
          <td>
            <%= new Date(order.createdAt).toLocaleString("en-IN", {
              weekday: "short",
              day: "2-digit",
              month: "short",
              year: "numeric",
              hour: "2-digit",
              minute: "2-digit",
              second: "2-digit",
              hour12: true,
              timeZone: "Asia/Kolkata"
            }) %>

          </td>
          <td>
            <% if (!order.isTaken) { %>
              <form method="post" action="/orders/<%=order._id%>/cancel?_method=DELETE">
                  <button class="btn btn-success btn-sm d-flex align-items-center justify-content-center px-3 py-1 fw-semibold shadow-sm"
                    style="border-radius: 25px;" > Cancel Order
                  </button>

              </form>
              
                
              
            <% } else { %>
              
                <button type="submit"
                  class="btn btn-danger btn-sm d-flex align-items-center justify-content-center px-3 py-1 fw-semibold shadow-sm"
                  style="border-radius: 25px; transition: all 0.3s;" disabled>
                  Cannot Cancel                
                </button>
              </form>
            <% } %>
          </td>
          <td>
            <% if (order.done) { %>
              <span class="badge bg-success">Completed</span>
            <% } else { %>
              <span class="badge bg-warning text-dark">Pending</span>
            <% } %>
          </td>
          <td>
            <button class="btn" onclick="subscribeUser('<%=order._id%>')"> Notify Me</button>
          </td>

        </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
  <% } else { %>
  <div class="alert alert-info text-center">No orders found.</div>
  <% } %>
</div>
<script>
async function requestNotificationPermission() {
    const permission = await Notification.requestPermission();
    if (permission !== 'granted') {
        alert('You need to enable notifications for this app to be notified when your order is completed.');
    }
}
requestNotificationPermission();

let swRegistration = null;

async function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
        swRegistration = await navigator.serviceWorker.register("/service-worker.js");
    }
}
registerServiceWorker();

async function subscribeUser(orderId) {
    if (!swRegistration) {
        alert("Service worker not registered!");
        return;
    }
    const permission = await Notification.requestPermission();
    if (permission !== "granted") return;

    // Check for existing subscription
    let subscription = await swRegistration.pushManager.getSubscription();
    if (!subscription) {
        subscription = await swRegistration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: "BCXKGmRb0RMjfORK5I4PFCkvDnU1MClMZNnbxpyU_9Aw6APUMIJ04EEg-MPekVCrKaMiemUvJ56o75ec6-wYpKo"
        });
    }

    await fetch("/consumer/<%= consumerId %>/save-subscription", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ orderId, consumerSubscription: subscription })
    });
    alert("You will be notified when your order is completed!");
}
</script>