<%- layout("/layouts/boilerplate") %>

<div class="container my-5">
  <h2 class="mb-4 text-center fw-bold text-primary">Order History</h2>

  <div class="mb-4 text-center">
    <% if (currentUser.orders && currentUser.orders.length > 0) { %>
    <form
      method="post"
      action="/consumer/<%= currentUser._id %>/history?_method=DELETE"
      onsubmit="return confirm('Are you sure you want to delete your order history?')"
    >
      <button
        type="submit"
        class="btn btn-danger btn-sm fw-semibold shadow-sm px-3 py-2"
        style="border-radius: 25px; transition: all 0.3s"
      >
        <i class="fa-solid fa-trash me-2"></i> Delete History
      </button>
    </form>
    <% } %>
  </div>

  <% if (orders && orders.length > 0) { %>
  <div class="row g-4">
    <% orders.forEach((order, index) => { %>
    <div class="col-12 col-md-6 col-lg-4">
      <div class="card shadow-sm rounded-4 h-100">
        <div class="card-header bg-dark text-white text-center">
          Order #<%= index + 1 %>
        </div>
        <div class="card-body">
          <p>
            <strong>Mess:</strong> <%= order.mess ? order.mess.name : "N/A" %>
          </p>
          <% 
            const totalRupees = order.totalPrice ? (Number(order.totalPrice) / 100) : 0;
            const plates = Number(order.noOfPlate) || 1;
            const perPlate = (typeof order.selectedDishPrice !== 'undefined' && order.selectedDishPrice !== null && Number(order.selectedDishPrice) > 0)
              ? Number(order.selectedDishPrice)
              : (plates ? (totalRupees / plates) : 0);
          %>
          <% if (order.selectedDishName) { %>
          <p><strong>Selected Dish:</strong> <%= order.selectedDishName %></p>
          <% } %>
          <p>
            <strong>Price per Plate:</strong> ₹<%= perPlate ?
            perPlate.toFixed(2) : '0.00' %>
          </p>
          <p><strong>Total Plates:</strong> <%= order.noOfPlate %></p>
          <p>
            <strong>Total Price:</strong> ₹<%= Number(totalRupees).toFixed(2) %>
          </p>
          <p class="mb-0"><strong>Placed On:</strong></p>
          <small class="text-muted">
            <%= new Date(order.createdAt).toLocaleString("en-IN", { weekday:
            "short", day: "2-digit", month: "short", year: "numeric", hour:
            "2-digit", minute: "2-digit", second: "2-digit", hour12: true,
            timeZone: "Asia/Kolkata" }) %>
          </small>
          <p class="mt-2">
            <strong>Status:</strong>
            <% if (order.done) { %>
            <span class="badge bg-success">Completed</span>
            <% } else { %>
            <span class="badge bg-warning text-dark">Pending</span>
            <% } %>
          </p>
        </div>
        <div class="card-footer bg-transparent border-0">
          <div class="d-flex justify-content-between">
            <div>
              <% if (!order.isTaken) { %>
              <form
                method="post"
                action="/orders/<%= order._id %>/cancel?_method=DELETE"
              >
                <button
                  class="btn btn-success btn-sm d-flex align-items-center justify-content-center px-3 py-1 fw-semibold shadow-sm"
                  style="border-radius: 25px; transition: all 0.3s"
                >
                  Cancel Order
                </button>
              </form>
              <% } else { %>
              <button
                class="btn btn-danger btn-sm d-flex align-items-center justify-content-center px-3 py-1 fw-semibold shadow-sm"
                style="border-radius: 25px; transition: all 0.3s"
                disabled
              >
                Cannot Cancel
              </button>
              <% } %>
            </div>
            <div>
              <button
                class="btn btn-outline-primary btn-sm"
                onclick="subscribeUser('<%= order._id %>')"
              >
                Notify Me
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <% }) %>
  </div>
  <% } else { %>
  <div class="alert alert-info text-center">No orders found.</div>
  <% } %>
</div>

<script>
  async function requestNotificationPermission() {
    const permission = await Notification.requestPermission();
    if (permission !== "granted") {
      alert(
        "You need to enable notifications for this app to be notified when your order is completed."
      );
    }
  }
  requestNotificationPermission();

  let swRegistration = null;

  async function registerServiceWorker() {
    if ("serviceWorker" in navigator) {
      swRegistration = await navigator.serviceWorker.register(
        "/service-worker.js"
      );
    }
  }
  registerServiceWorker();

  async function subscribeUser(orderId) {
    if (!swRegistration) {
      alert("Service worker not registered!");
      return;
    }
    const permission = await Notification.requestPermission();
    if (permission !== "granted") return;

    let subscription = await swRegistration.pushManager.getSubscription();
    if (!subscription) {
      subscription = await swRegistration.pushManager.subscribe({
        userVisibleOnly: true,
        applicationServerKey:
          "BCXKGmRb0RMjfORK5I4PFCkvDnU1MClMZNnbxpyU_9Aw6APUMIJ04EEg-MPekVCrKaMiemUvJ56o75ec6-wYpKo",
      });
    }

    await fetch("/consumer/<%= consumerId %>/save-subscription", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ orderId, consumerSubscription: subscription }),
    });
    alert("You will be notified when your order is completed!");
  }
</script>
