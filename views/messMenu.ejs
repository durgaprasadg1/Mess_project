<%- layout("/layouts/boilerplate") %>

<!-- Loader -->
<div
  id="loader"
  class="d-flex justify-content-center align-items-center bg-light position-fixed top-0 start-0 w-100 h-100"
  style="z-index: 1050"
>
  <div class="spinner-border text-warning" role="status">
    <span class="visually-hidden">Loading...</span>
  </div>
</div>

<style>
  :root {
    --primary: #ff8c00;
    --secondary: #ffb300;
    --light-bg: #fff7e6;
    --dark-text: #4d2600;
  }

  body {
    background-color: var(--light-bg);
    color: var(--dark-text);
    font-family: "Poppins", sans-serif;
  }

  .card {
    border: none;
    border-radius: 1.25rem;
    box-shadow: 0 0.75rem 1.5rem rgba(0, 0, 0, 0.08);
    transition: transform 0.3s ease;
  }

  .card:hover {
    transform: translateY(-4px);
  }

  h3 {
    font-size: 1.9rem;
    font-weight: 700;
    color: var(--primary);
    text-align: center;
  }

  .form-select,
  .form-control {
    border-radius: 0.5rem;
    border: 1.5px solid #ffd480;
    transition: 0.3s;
  }

  .form-control:focus,
  .form-select:focus {
    border-color: var(--primary);
    box-shadow: none;
  }

  .btn-primary {
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    border: none;
    border-radius: 50px;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .btn-primary:hover {
    transform: scale(1.05);
    box-shadow: 0 0.8rem 1.5rem rgba(255, 140, 0, 0.3);
  }

  .btn-secondary {
    border-radius: 30px;
    background: #ffe0b3;
    color: var(--dark-text);
    font-weight: 500;
  }

  .btn-secondary:hover {
    background: #ffd480;
  }

  .btn-danger {
    font-size: 0.85rem;
    border-radius: 50px;
  }

  .menu-item {
    position: relative;
    animation: fadeIn 0.3s ease-in-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<div class="container my-5">
  <div class="row justify-content-center">
    <div class="col-12 col-md-8 col-lg-6">
      <div class="card shadow-lg p-4">
        <h3 class="mb-4">
          <i class="bi bi-clipboard-plus me-2"></i> Add Mess Menu
        </h3>

        <form
          method="POST"
          action="/mess/<%= id %>/menu"
          class="needs-validation"
          novalidate
        >
          <div class="row mb-3">
            <div class="col">
              <label class="form-label fw-semibold">Meal Time</label>
              <select name="mealTime" class="form-select" required>
                <option value="lunch">Lunch</option>
                <option value="dinner">Dinner</option>
              </select>
            </div>

            <% if (mess.category === 'veg') { %>

            <div class="col">
              <label class="form-label fw-semibold">Type</label>
              <select name="menutype" class="form-select" required>
                <option value="vegMenu">Veg</option>
              </select>
            </div>
            <% } %> <% if (mess.category === 'both') { %>
            <div class="col">
              <label class="form-label fw-semibold">Type</label>
              <select name="menutype" class="form-select" required>
                <option value="vegMenu">Veg</option>
                <option value="nonVegMenu">Non Veg</option>
              </select>
            </div>
            <% } %>
          </div>

          <div id="menu-container"></div>

          <button
            type="button"
            class="btn btn-secondary mb-3"
            onclick="addDish()"
          >
            <i class="bi bi-plus-circle me-1"></i> Add Dish
          </button>

          <div class="d-grid">
            <button type="submit" class="btn btn-primary btn-lg shadow-sm">
              <i class="bi bi-check-circle me-2"></i> Save Menu
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  window.addEventListener("load", function () {
    const loader = document.getElementById("loader");
    loader.style.transition = "opacity 0.6s ease";
    loader.style.opacity = "0";
    setTimeout(() => loader.remove(), 600);
  });

  let dishIndex = 0;

  function addDish(prefill) {
    const container = document.getElementById("menu-container");
    const idx = dishIndex++;
    const dish = document.createElement("div");
    dish.className = "mb-3 menu-item border rounded p-3";
    dish.dataset.index = idx;
    dish.innerHTML = `
      <div class="d-flex justify-content-between align-items-center mb-2">
        <label class="form-label fw-semibold mb-0">Dish Name</label>
        <div>
          <button type="button" class="btn btn-sm btn-danger" onclick="removeDish(this)">
            <i class="bi bi-trash"></i> Remove Dish
          </button>
        </div>
      </div>
      <div class="row g-2 mb-2">
        <div class="col">
          <input type="text" class="form-control dish-name" name="dishes[${idx}][name]" placeholder="e.g. South Thali" required />
        </div>
        <div class="col-4">
          <input type="number" step="0.01" class="form-control dish-price" name="dishes[${idx}][price]" placeholder="Dish price (₹)" />
        </div>
      </div>
      <div class="items-container mb-2" data-dish-index="${idx}"></div>
      <div class="d-flex gap-2">
        <button type="button" class="btn btn-sm btn-secondary" onclick="addItem(${idx})"><i class="bi bi-plus"></i> Add Item</button>
      </div>
    `;
    container.appendChild(dish);

    if (prefill) {
      const nameInput = dish.querySelector(".dish-name");
      const priceInput = dish.querySelector(".dish-price");
      nameInput.value = prefill.name || "";
      priceInput.value = prefill.price || "";
      if (Array.isArray(prefill.items)) {
        prefill.items.forEach((it) => addItem(idx, it));
      }
    } else {
      addItem(idx);
    }
  }

  function addItem(dishIdx, prefill) {
    const itemsContainer = document.querySelector(
      `.items-container[data-dish-index="${dishIdx}"]`
    );
    const itemIdx = itemsContainer.children.length;
    const div = document.createElement("div");
    div.className = "d-flex gap-2 align-items-center mb-2";
    div.innerHTML = `
      <input type="text" class="form-control item-name" name="dishes[${dishIdx}][items][${itemIdx}][name]" placeholder="Item name (e.g. Sambar)" required />
      <input type="number" step="0.01" class="form-control item-price" name="dishes[${dishIdx}][items][${itemIdx}][price]" placeholder="Price (₹)" />
      <div class="d-flex align-items-center gap-2">
        <div class="form-check form-switch mb-0">
          <input class="form-check-input" type="checkbox" id="d${dishIdx}i${itemIdx}limited" name="dishes[${dishIdx}][items][${itemIdx}][isLimited]" />
          <label class="form-check-label small" for="d${dishIdx}i${itemIdx}limited">Limited</label>
        </div>
        <input type="number" min="1" class="form-control form-control-sm limit-count" name="dishes[${dishIdx}][items][${itemIdx}][limitCount]" placeholder="Limit" style="width:90px; display:none;" />
        <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeItem(this)">Remove</button>
      </div>
    `;
    itemsContainer.appendChild(div);
    if (prefill) {
      div.querySelector(".item-name").value = prefill.name || "";
      if (typeof prefill.price !== "undefined" && prefill.price !== null)
        div.querySelector(".item-price").value = prefill.price;
      const priceInput = div.querySelector(".item-price");
      const cb = div.querySelector("input[type=checkbox]");
      const limitInput = div.querySelector(".limit-count");
      console.log("Prefill" + prefill);
      if (prefill.isLimited) {
        console.log("isChecked" + prefill.isLimited);
        if (cb) cb.checked = true;
        if (limitInput) limitInput.style.display = "";
        if (prefill.limitCount) limitInput.value = prefill.limitCount;
        if (priceInput) priceInput.disabled = true;
      } else {
        if (priceInput) priceInput.disabled = false;
      }
    }
  }

  function removeItem(btn) {
    let itemRow = btn;
    while (
      itemRow &&
      !itemRow.parentElement.classList.contains("items-container")
    ) {
      itemRow = itemRow.parentElement;
    }
    if (!itemRow) return;
    const itemsContainer = itemRow.parentElement;
    itemRow.remove();

    [...itemsContainer.children].forEach((child, idx) => {
      const nameInput = child.querySelector(".item-name");
      const priceInput = child.querySelector(".item-price");
      const limitedCheckbox = child.querySelector(".form-check-input");
      const limitInput = child.querySelector(".limit-count");
      const dishIndex = itemsContainer.dataset.dishIndex;
      if (nameInput)
        nameInput.name = `dishes[${dishIndex}][items][${idx}][name]`;
      if (priceInput)
        priceInput.name = `dishes[${dishIndex}][items][${idx}][price]`;
      if (limitedCheckbox)
        limitedCheckbox.name = `dishes[${dishIndex}][items][${idx}][isLimited]`;
      if (limitInput)
        limitInput.name = `dishes[${dishIndex}][items][${idx}][limitCount]`;
    });
  }

  function removeDish(button) {
    const dishEl = button.closest(".menu-item");
    dishEl.remove();
  }

  document.addEventListener("change", (e) => {
    if (
      e.target &&
      e.target.type === "checkbox" &&
      e.target.name &&
      e.target.name.includes("[isLimited]")
    ) {
      const innerDiv = e.target.closest("div");
      const limitInput = innerDiv.querySelector(".limit-count");
      const containerDiv = innerDiv.parentElement;
      const priceInput = containerDiv
        ? containerDiv.querySelector(".item-price")
        : null;
      if (limitInput) limitInput.style.display = e.target.checked ? "" : "none";
      if (priceInput) priceInput.disabled = e.target.checked;
    }
  });
</script>
